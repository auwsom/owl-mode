// Generated by CoffeeScript 1.4.0
(function() {

  this.Page = (function() {

    function Page(pageName, body) {
      this.pageName = pageName;
      this.body = body;
      this.created = new Date().toString();
      this.saved = "";
    }

    Page.prototype.toString = function() {
      return "" + this.pageName + " \n " + this.body + " \n " + this.created + " \n " + this.saved + " ";
    };

    return Page;

  })();

  this.BrowserBasedPageStore = (function() {

    function BrowserBasedPageStore() {}

    BrowserBasedPageStore.prototype.k = function(pName) {
      return "fpt.pageStore." + pName;
    };

    BrowserBasedPageStore.prototype.get = function(pName) {
      var s;
      s = localStorage.getItem(this.k(pName));
      if (s != null) {
        return JSON.parse(s);
      }
      return new Page(pName, initialOpmltext);
    };

    BrowserBasedPageStore.prototype.set = function(pName, page) {
      return localStorage.setItem(this.k(pName), JSON.stringify(page));
    };

    BrowserBasedPageStore.prototype.save = function(page) {
      page.saved = new Date().toString();
      return this.set(page.pageName, page);
    };

    return BrowserBasedPageStore;

  })();

  this.ServerBasedPageStore = (function() {

    function ServerBasedPageStore(getUrl, postUrl) {
      this.getUrl = getUrl;
      this.postUrl = postUrl;
    }

    ServerBasedPageStore.prototype.get = function(pName, callback) {
      var s;
      s = "";
      return $.get(this.getUrl + "pName", function(data) {
        console.log(data);
        if (s != null) {
          callback(JSON.parse(s));
        } else {
          return callback(new Page(pName, initialOpmltext));
        }
      });
    };

    ServerBasedPageStore.prototype.set = function(pName, page) {
      return $.post(this.postUrl, {
        "pageName": pName,
        "page": JSON.stringify(page)
      }, function(data) {});
    };

    ServerBasedPageStore.prototype.save = function(page) {
      page.saved = new Date().toString();
      return this.set(page.pageName, page);
    };

    return ServerBasedPageStore;

  })();

}).call(this);
